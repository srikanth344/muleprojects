<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="customers-id-test-suite.xml" />
	<munit:test name="customers-idUnHappyFlow" doc:id="825a58b2-5c29-4f7d-99a6-4f11365b092a" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="get all records from particular customer using Id" doc:id="aec704ad-5515-4153-9ac7-da4992aca7c4" processor="db:Select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- [['*']]]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Event" doc:id="77aaeebb-2edd-4cff-bd82-a7b65c3a32e6" >
				<munit:variables >
					<munit:variable key="Id" value="10" mediaType="application/json" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="b26e94bf-e9cd-4677-b819-9c71eee2d177" >
				<flow-ref doc:name="Flow-ref to customers-idFlow" doc:id="72295ed8-44e1-4b00-8254-6dff55d5cf14" name="customers-idFlow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="eb6e59b2-cf63-4520-8793-3fafc38d9ecd" >
						<logger level="INFO" doc:name="Logger" doc:id="45dbe11b-d36b-4cfa-8aa1-d6fdd90cd0c3" message="continue"/>
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="a87e460e-2976-49a8-a70b-c67071b0a4e5" message="Payload doesn,t match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import Get_customers_Id::get_customersby_Id_UnHappyFlow
---
get_customersby_Id_UnHappyFlow::main({payload:payload,attributes:attributes,vars:vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="customers-id-test-HappyFlow" doc:id="0d99fe9f-cadd-4eb3-a29e-0bcbe871761a" description="Test">
		<munit:behavior>
			<munit-tools:mock-when doc:name="get all records from particular customer using id" doc:id="f3b77a67-a476-4542-904e-2bb42700126b" processor="db:Select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- [['*']]]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="d5c18513-4934-46d0-8364-947e78de7e34" >
				<munit:variables >
					<munit:variable key="Id" value="114" mediaType="application/json" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to customers-idFlow" doc:id="63b030d3-590a-4453-8fb1-bd9a92dbec17" name="customers-idFlow"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="f1d8b276-b075-4066-b438-87644ad5be45" is="#[MunitTools::equalTo(payload)]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>


</mule>
